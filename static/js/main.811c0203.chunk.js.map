{"version":3,"sources":["Components/Nav/ListItems.js","Components/Nav/Nav.style.jsx","Components/Nav/Nav.jsx","Api/users.js","Components/Login/Login.jsx","Api/inventory.js","Api/department.js","Api/company.js","Components/Inventory/Inventory.jsx","Components/Company/Company.jsx","Components/Department/Department.jsx","Components/Users/Users.jsx","Api/dashboard.js","Components/Dashboard/Dashboard.jsx","App.js","index.js","Components/Dashboard/Dashboard.module.css"],"names":["mainListItems","ListItem","button","component","NavLink","to","exact","activeStyle","backgroundColor","ListItemIcon","ListItemText","primary","secondaryListItems","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","sidebarLogo","alignItems","justifyContent","flexWrap","padding","title1","fontFamily","fontSize","marginBottom","fontWeight","textAlign","lineHeight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","mixins","content","marginTop","minHeight","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","height","Nav","props","classes","React","useState","open","setOpen","history","useHistory","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","noWrap","sessionStorage","clear","push","Drawer","Divider","List","children","url","registerUser","form","a","email","password","axios","post","returnSecureToken","res","response","loginUser","getUsers","get","data","avatar","margin","palette","secondary","main","submit","SignIn","setForm","alert","setAlert","handleChange","e","target","name","value","login","preventDefault","status","setItem","JSON","stringify","idToken","Alert","severity","console","log","Container","maxWidth","Avatar","onSubmit","TextField","fullWidth","id","label","onChange","required","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","fetchItems","searchItems","createItem","company","department","qty","price","depre_price","purchase_order_no","model","updateItem","put","deleteItem","delete","fetchDepartment","createDepartment","updateDepartment","deleteDepartment","fetchCompany","createCompany","updateCompany","deleteCompany","Inventory","useEffect","itemData","departmentData","companyData","setItems","setCompanies","setDepartments","fetchApi","items","companies","departments","createModal","setCreateModal","confirmDeleteModal","setConfirmDeleteModal","showModal","setShowModal","isEdit","setIsEdit","searchItem","setSearchItem","printModal","setPrintModal","isCancelled","fetchSearch","trim","onProcess","clearForm","addItem","map","item","removeItem","filter","searchChange","debounce","text","addDialog","Dialog","onClose","scroll","method","DialogTitle","DialogContent","FormControl","select","MenuItem","length","DialogActions","style","float","endIcon","disabled","size","showDialog","InputProps","readOnly","confirmDelete","aria-labelledby","aria-describedby","DialogContentText","printItemsModal","Grid","xs","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","cursor","Company","addCompany","removeCompany","align","Department","addDepartment","removeDepartment","Users","setUsers","users","isProcessing","register","user","create_date","getInventoryCount","getDepartmentCount","getUsersCount","Dashboard","ItemCount","DepCount","UsersCount","getItems","resUsers","setCounts","count","reverse","getCounts","counts","direction","justify","styles","cardsContainer","md","Items","ItemsSideColor","Icons","iconStyle","Content","ContentTitle","ContentValue","DepartmentsSideColor","UsersSideColor","opacity","App","path","Login","ReactDOM","render","Fragment","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.811c0203.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    \r\n\r\n    <ListItem button\r\n      component={NavLink}\r\n      to=\"/dashboard\"\r\n      exact\r\n      activeStyle={{\r\n        backgroundColor:'#ecf0f1'\r\n      }}\r\n      >\r\n        <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n\r\n    \r\n    <ListItem button\r\n      component={NavLink}\r\n      to=\"/inventory\"\r\n      exact\r\n      activeStyle={{\r\n        backgroundColor:'#ecf0f1'\r\n      }}\r\n      >\r\n        <ListItemIcon>\r\n        <StorageIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Inventory\" />\r\n    </ListItem>\r\n\r\n    <ListItem button\r\n      component={NavLink}\r\n      to=\"/company\"\r\n      exact\r\n      activeStyle={{\r\n        backgroundColor:'#ecf0f1'\r\n      }}\r\n      >\r\n        <ListItemIcon>\r\n        <BusinessIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Companies\" />\r\n    </ListItem>\r\n\r\n    <ListItem button\r\n      component={NavLink}\r\n      to=\"/department\"\r\n      exact\r\n      activeStyle={{\r\n        backgroundColor:'#ecf0f1'\r\n      }}\r\n      >\r\n        <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Department\" />\r\n    </ListItem>\r\n\r\n    <ListItem button\r\n      component={NavLink}\r\n      to=\"/users\"\r\n      exact\r\n      activeStyle={{\r\n        backgroundColor:'#ecf0f1'\r\n      }}\r\n      >\r\n        <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Users\" />\r\n    </ListItem>\r\n\r\n\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    {/* <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Missing Items\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText>\r\n        <Typography >\r\n          Returns and \r\n        </Typography>\r\n        <Typography>\r\n          Defective Items\r\n        </Typography>\r\n      </ListItemText>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Receivee History\" />\r\n    </ListItem> */}\r\n  </div>\r\n);","import {makeStyles} from '@material-ui/core'\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    sidebarLogo: {\r\n      display: 'flex',\r\n      alignItems: 'right',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      padding: '0px',\r\n      \r\n    },\r\n    title1:{\r\n      fontFamily: 'Poppins Medium',\r\n      fontSize: '32px',\r\n      marginBottom: '5px',\r\n      '& span':{\r\n        display:'block',\r\n        fontFamily: 'Poppins Regular',\r\n        fontSize: '12px',\r\n        fontWeight:'500',\r\n        textAlign:'right',\r\n        lineHeight: 1,\r\n      }\r\n      \r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      marginTop:'70px',\r\n      minHeight: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n  }));","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { mainListItems, secondaryListItems } from './ListItems';\r\nimport {useStyles} from './Nav.style'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nexport default function Nav(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const history = useHistory()\r\n\r\n  const handleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const logout = () => {\r\n    sessionStorage.clear();\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawer}\r\n            className={clsx(classes.menuButton)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton onClick={logout} color=\"inherit\">\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.sidebarLogo}>\r\n          <p className={classes.title1}>Inventory <span>SYSTEM</span></p>\r\n          \r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n          {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}","import axios from 'axios'\r\n\r\nconst url = 'https://www.googleapis.com';\r\n\r\nconst url_1 = 'https://us-central1-inventory-system-944c6.cloudfunctions.net';\r\n\r\nexport const registerUser = async (form) => {\r\n    const {email, password} = form\r\n    try{\r\n        const res = await axios.post(`${url}/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDNa9uzz-cR39dLVb1of0eN1cQ1QTP48kU`, {email, password, returnSecureToken: true});\r\n        return res;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const loginUser = async (form) => {\r\n    const {email, password} = form\r\n    try{\r\n        const res = await axios.post(`${url}/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDNa9uzz-cR39dLVb1of0eN1cQ1QTP48kU`, {email, password, returnSecureToken: true});\r\n        return res;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const authUser = async (idToken) => {\r\n    try{\r\n        const res = await axios.post(`${url}/identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyDNa9uzz-cR39dLVb1of0eN1cQ1QTP48kU`, {idToken});\r\n        return res;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\n\r\nexport const getUsers = async () => {\r\n    try{\r\n        const data = await axios.get(`${url_1}/app/api/users/read`);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {loginUser} from './../../Api/users';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState({\r\n    email:'',\r\n    password:''\r\n  });\r\n\r\n  const [alert, setAlert] = useState('');\r\n\r\n  const handleChange = (e) =>{\r\n    setForm({...form, [e.target.name]:e.target.value});\r\n  }\r\n\r\n  const login = async (e) =>{\r\n    e.preventDefault();\r\n    setAlert('');\r\n    try{\r\n      const res = await loginUser(form);\r\n      if(res.status===200){\r\n        sessionStorage.setItem('userToken',JSON.stringify(res.data.idToken));\r\n        history.push('/dashboard');\r\n      }else{\r\n        setAlert((\r\n          <Alert severity=\"error\">Incorrect Email or Password</Alert>\r\n        ))\r\n      }\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        \r\n        <form onSubmit={login} className={classes.form}>\r\n          {alert}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n            required\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            name=\"password\"\r\n            value={form.password}\r\n            onChange={handleChange}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            required\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n        </form>\r\n      </div>\r\n      {/* <Box mt={8}>\r\n        <Copyright />\r\n      </Box> */}\r\n    </Container>\r\n  );\r\n}","import axios from 'axios'\r\n\r\nconst url = 'https://us-central1-inventory-system-944c6.cloudfunctions.net';\r\n\r\nexport const fetchItems = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/app/api/items/read`);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const searchItems = async (name) => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/app/api/items/search/`+name);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\n\r\nexport const createItem = async (name, company, department, qty, price, depre_price, purchase_order_no, model) => {\r\n    try{\r\n        const data = await axios.post(`${url}/app/api/items/create`, {name, company, department, qty, price, depre_price, purchase_order_no, model });\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const updateItem = async (form) => {\r\n    try{\r\n        const {id, name, company, department, qty, price, depre_price, purchase_order_no, model} = form;\r\n        const data = await axios.put(`${url}/app/api/items/update/`+id, {name, company, department, qty, price, depre_price, purchase_order_no, model });\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const deleteItem = async (id) => {\r\n    try{\r\n        const data = await axios.delete(`${url}/app/api/items/delete/`+id);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\n// export const fetchCategories = async () =>{\r\n//     try{\r\n//         const {data} = await axios.get(`${url}/category`);\r\n//         return data;\r\n//     }catch(error){\r\n//         return error.response\r\n//     }\r\n// }\r\n\r\n// export const addItem =  (Name, Price, SellPrice, Category, Qty, Supplier, Images=[], Description) => {\r\n//     const fd = new FormData();\r\n//     if(Images.length > 0)\r\n//     Images.forEach(Image=>{\r\n//         fd.append('Images[]', Image, Image.name)\r\n//     })\r\n//     fd.append('Name',Name);\r\n//     fd.append('Description', Description)\r\n//     fd.append('Price', Price);\r\n//     fd.append('SellPrice', SellPrice);\r\n//     fd.append('Category', Category);\r\n//     fd.append('Qty', Qty); \r\n//     fd.append('Supplier', Supplier);       \r\n//     const data = axios.post(`${url}/items/create`, fd)\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const addCategory = (Name) =>{\r\n//     const data = axios.post(`${url}/category/create`, {Name})\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const removeCategory = (CategoryId) =>{\r\n//     const data = axios.delete(`${url}/category/delete`, {data:{CategoryId}})\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const removeItem = (ItemId)=>{\r\n//     const data = axios.delete(`${url}/items/delete`, {data:{ItemId}})\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const  updateItem = (ItemId, Name, Price, SellPrice, Category, Qty, Images, Description)=>{\r\n//     const fd = new FormData();\r\n//     if(Images.length > 0)\r\n//     Images.forEach(Image=>{\r\n//         fd.append('Images[]', Image, Image.name)\r\n//     })\r\n\r\n//     fd.append('ItemId',ItemId);\r\n//     fd.append('Name',Name);\r\n//     fd.append('Description', Description)\r\n//     fd.append('Price', Price);\r\n//     fd.append('SellPrice', SellPrice);\r\n//     fd.append('Category', Category);\r\n//     fd.append('Qty', Qty);\r\n//     fd.append('_method', 'put');\r\n\r\n//     const data = axios.post(`${url}/items/update`, fd)\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const deleteImage = (Image) =>{\r\n//     const fd = new FormData();\r\n//     fd.append('Image',Image);\r\n//     fd.append('_method','delete');\r\n//     const data = axios.post(`${url}/items/deleteImage`, fd)\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const addStock = (Item, Supplier, Qty) =>{\r\n//     const data = axios.post(`${url}/stock/create`, {Item, Supplier, Qty})\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }","import axios from 'axios'\r\n\r\nconst url = 'https://us-central1-inventory-system-944c6.cloudfunctions.net';\r\n\r\nexport const fetchDepartment = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/app/api/department/read`);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\n\r\nexport const createDepartment = async (name) => {\r\n    try{\r\n        const data = await axios.post(`${url}/app/api/department/create`, {name});\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const updateDepartment = async (id, name) => {\r\n    try{\r\n        const data = await axios.put(`${url}/app/api/department/update/`+id, {name});\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const deleteDepartment = async (id) => {\r\n    try{\r\n        const data = await axios.delete(`${url}/app/api/department/delete/`+id);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://us-central1-inventory-system-944c6.cloudfunctions.net';\r\n\r\nexport const fetchCompany = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/app/api/company/read`);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\n\r\nexport const createCompany = async (name) => {\r\n    try{\r\n        const data = await axios.post(`${url}/app/api/company/create`, {name});\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const updateCompany = async (id, name) => {\r\n    try{\r\n        const data = await axios.put(`${url}/app/api/company/update/`+id, {name});\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const deleteCompany = async (id) => {\r\n    try{\r\n        const data = await axios.delete(`${url}/app/api/company/delete/`+id);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\n// export const fetchCategories = async () =>{\r\n//     try{\r\n//         const {data} = await axios.get(`${url}/category`);\r\n//         return data;\r\n//     }catch(error){\r\n//         return error.response\r\n//     }\r\n// }\r\n\r\n// export const addItem =  (Name, Price, SellPrice, Category, Qty, Supplier, Images=[], Description) => {\r\n//     const fd = new FormData();\r\n//     if(Images.length > 0)\r\n//     Images.forEach(Image=>{\r\n//         fd.append('Images[]', Image, Image.name)\r\n//     })\r\n//     fd.append('Name',Name);\r\n//     fd.append('Description', Description)\r\n//     fd.append('Price', Price);\r\n//     fd.append('SellPrice', SellPrice);\r\n//     fd.append('Category', Category);\r\n//     fd.append('Qty', Qty); \r\n//     fd.append('Supplier', Supplier);       \r\n//     const data = axios.post(`${url}/items/create`, fd)\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const addCategory = (Name) =>{\r\n//     const data = axios.post(`${url}/category/create`, {Name})\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const removeCategory = (CategoryId) =>{\r\n//     const data = axios.delete(`${url}/category/delete`, {data:{CategoryId}})\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const removeItem = (ItemId)=>{\r\n//     const data = axios.delete(`${url}/items/delete`, {data:{ItemId}})\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const  updateItem = (ItemId, Name, Price, SellPrice, Category, Qty, Images, Description)=>{\r\n//     const fd = new FormData();\r\n//     if(Images.length > 0)\r\n//     Images.forEach(Image=>{\r\n//         fd.append('Images[]', Image, Image.name)\r\n//     })\r\n\r\n//     fd.append('ItemId',ItemId);\r\n//     fd.append('Name',Name);\r\n//     fd.append('Description', Description)\r\n//     fd.append('Price', Price);\r\n//     fd.append('SellPrice', SellPrice);\r\n//     fd.append('Category', Category);\r\n//     fd.append('Qty', Qty);\r\n//     fd.append('_method', 'put');\r\n\r\n//     const data = axios.post(`${url}/items/update`, fd)\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const deleteImage = (Image) =>{\r\n//     const fd = new FormData();\r\n//     fd.append('Image',Image);\r\n//     fd.append('_method','delete');\r\n//     const data = axios.post(`${url}/items/deleteImage`, fd)\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }\r\n\r\n// export const addStock = (Item, Supplier, Qty) =>{\r\n//     const data = axios.post(`${url}/stock/create`, {Item, Supplier, Qty})\r\n//     .then(res=>res)\r\n//     .catch(error=>error.response);\r\n//     return data;\r\n// }","import { Button, \r\n    Container, \r\n    Grid,\r\n    Paper, \r\n    TextField,\r\n    TableBody, \r\n    TableRow, \r\n    TableCell,\r\n    Table,\r\n    TableContainer,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    FormControl,\r\n    DialogActions,\r\n    MenuItem,\r\n    DialogContentText,\r\n    TableHead} from '@material-ui/core';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport {fetchItems, createItem, deleteItem, updateItem, searchItems} from './../../Api/inventory';\r\nimport {fetchDepartment} from './../../Api/department';\r\nimport {fetchCompany} from './../../Api/company';\r\nimport {debounce} from 'lodash'\r\n\r\nfunction Inventory() {\r\n\r\n    useEffect(()=>{\r\n        const fetchApi = async () => {\r\n            try{\r\n                const itemData =  await fetchItems();\r\n                const departmentData = await fetchDepartment();\r\n                const companyData = await fetchCompany();\r\n\r\n                setItems(itemData.data);\r\n                setCompanies(companyData.data);\r\n                setDepartments(departmentData.data);\r\n            }catch(e){\r\n                console.log(e);\r\n                setItems([]);\r\n                setCompanies([]);\r\n                setDepartments([]);\r\n            }\r\n            \r\n        }\r\n        fetchApi();\r\n    },[]);\r\n\r\n    \r\n\r\n    const [items, setItems] = useState([]);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [createModal, setCreateModal] = useState(false);\r\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [searchItem, setSearchItem] = useState('');\r\n    const [printModal, setPrintModal] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        let isCancelled = false;\r\n        const fetchSearch = async () =>{\r\n          try{\r\n            let items = searchItem.trim() !== '' ? await searchItems(searchItem) : await fetchItems();\r\n            console.log(items)\r\n            if(!isCancelled){\r\n              setItems(items.data);\r\n            }\r\n          }catch(e){\r\n              console.log(e)\r\n          }\r\n        }\r\n        if(searchItem.trim() !== '')\r\n        fetchSearch();\r\n        else\r\n\r\n        return ()=>isCancelled = true\r\n      }, [searchItem])\r\n    \r\n\r\n    const [form, setForm] = useState({\r\n        name:'',\r\n        company:'',\r\n        qty:'',\r\n        model:'',\r\n        price:'',\r\n        depre_price:'',\r\n        department:'',\r\n        purchase_order_no:'',\r\n        onProcess:false\r\n    });\r\n\r\n\r\n    const clearForm = () =>{\r\n        setForm({\r\n            id:'',\r\n            name:'',\r\n            company:'',\r\n            qty:'',\r\n            model:'',\r\n            price:'',\r\n            depre_price:'',\r\n            department:'',\r\n            purchase_order_no:'',\r\n            onProcess:false\r\n        });\r\n    };\r\n\r\n\r\n    const addItem = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            const {name, company, department, qty, price, depre_price, purchase_order_no, model} = form;\r\n            setForm({...form, onProcess:true})\r\n            const res = !isEdit ? await createItem(\r\n                name, company, department, qty, price, depre_price, purchase_order_no, model\r\n            ) : await updateItem(form);\r\n            if(res.status===200){\r\n                setForm({...form, onProcess:false});\r\n                if(!isEdit)\r\n                    setItems([...items, res.data.data]);\r\n                else\r\n                    setItems(items.map(item=>{\r\n                    // eslint-disable-next-line\r\n                    return item.id==form.id ? form : item;\r\n                }));\r\n                clearForm();\r\n                setCreateModal(false)\r\n            }else{\r\n                setForm({...form, onProcess:false});\r\n                clearForm();\r\n                setCreateModal(false)\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n            setForm({\r\n                id:'',\r\n                name:'',\r\n                company:'',\r\n                qty:'',\r\n                model:'',\r\n                price:'',\r\n                depre_price:'',\r\n                department:'',\r\n                purchase_order_no:'',\r\n                onProcess:false\r\n            });\r\n            setForm({...form, onProcess:false});\r\n            setCreateModal(false);\r\n        }\r\n    }\r\n    \r\n   \r\n    const removeItem = async () => {\r\n       try{\r\n            const res = await deleteItem(form.id);\r\n            if(res.status === 200){\r\n                setItems(items.filter(item=>item.id!==form.id));\r\n                setConfirmDeleteModal(false);\r\n                setForm({\r\n                    id:'',\r\n                    name:'',\r\n                    company:'',\r\n                    qty:'',\r\n                    model:'',\r\n                    price:'',\r\n                    depre_price:'',\r\n                    department:'',\r\n                    purchase_order_no:'',\r\n                    onProcess:false\r\n                });\r\n            }else{\r\n                setConfirmDeleteModal(false);\r\n                alert('something went wrong!');\r\n            }\r\n       }catch(e){\r\n           console.log(e);\r\n           setConfirmDeleteModal(false);\r\n           setForm({\r\n               id:'',\r\n               name:'',\r\n               company:'',\r\n               qty:'',\r\n               model:'',\r\n               price:'',\r\n               depre_price:'',\r\n               department:'',\r\n               purchase_order_no:'',\r\n               onProcess:false\r\n           });\r\n       }\r\n    }\r\n\r\n\r\n    const handleChange = (e) =>{\r\n        setForm({...form, [e.target.name]:e.target.value});\r\n    };\r\n\r\n    const searchChange = debounce((text) =>{\r\n        console.log(text);\r\n        setSearchItem(text)\r\n    }, 1500)\r\n\r\n      const addDialog = (\r\n        <Dialog\r\n          open={createModal}\r\n          onClose={()=>{\r\n              setIsEdit(false);\r\n              setCreateModal(false);\r\n              clearForm();\r\n          }}\r\n          scroll=\"body\"\r\n          fullWidth\r\n        >\r\n          <form onSubmit={addItem} method=\"post\">\r\n            <DialogTitle className=\"mt-2\">{isEdit ? 'Edit' : 'Add'} Item</DialogTitle>\r\n            <DialogContent>\r\n                <Container>\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                    required\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={form.name}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    />\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                    required\r\n                    name=\"model\"\r\n                    label=\"Model\"\r\n                    type=\"text\"\r\n                    value={form.model}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    />\r\n                    </FormControl>\r\n                    \r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                        select\r\n                        margin=\"normal\"\r\n                        label=\"Company\"\r\n                        name=\"company\"\r\n                        value={form.company}\r\n                        onChange={handleChange}\r\n                        required\r\n                        fullWidth\r\n                        >\r\n                            <MenuItem value={' '}>\r\n                                {'--Select Company--'}\r\n                            </MenuItem>\r\n                            {companies.length >0  && companies.map(company=>(\r\n                            <MenuItem key={company.id} value={company.name}>\r\n                                {company.name}\r\n                            </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                        select\r\n                        margin=\"normal\"\r\n                        label=\"Department\"\r\n                        name=\"department\"\r\n                        value={form.department}\r\n                        onChange={handleChange}\r\n                        required\r\n                        fullWidth\r\n                        >\r\n                            <MenuItem value={' '}>\r\n                                {'--Select Company--'}\r\n                            </MenuItem>\r\n                            {departments.length >0  && departments.map(department=>(\r\n                            <MenuItem key={department.id} value={department.name}>\r\n                                {department.name}\r\n                            </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"qty\"\r\n                            label=\"Qty\"\r\n                            type=\"number\"\r\n                            value={form.qty}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"price\"\r\n                            label=\"Price\"\r\n                            type=\"number\"\r\n                            value={form.price}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"depre_price\"\r\n                            label=\"Depreciate Price\"\r\n                            type=\"number\"\r\n                            value={form.depre_price}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"purchase_order_no\"\r\n                            label=\"Purchase order no.\"\r\n                            type=\"text\"\r\n                            value={form.purchase_order_no}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n\r\n                </Container>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Container>\r\n                    {\r\n                        isEdit ? (\r\n                        <Button\r\n                        id='addBtn'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float:'right', marginRight:'15px', marginBottom: '5px'}}\r\n                        endIcon={<SaveIcon />}\r\n                        disabled={form.onProcess}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button> \r\n                        ) : \r\n                        (\r\n                        <Button\r\n                        id='addBtn'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float:'right', marginRight:'15px', marginBottom: '5px'}}\r\n                        endIcon={<AddIcon />}\r\n                        disabled={form.onProcess}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                        )\r\n                    }\r\n                        \r\n                </Container>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n    );\r\n\r\n    const showDialog = (\r\n        <Dialog\r\n          open={showModal}\r\n          onClose={()=>{\r\n              setIsEdit(false);\r\n              setShowModal(false);\r\n              clearForm();\r\n          }}\r\n          scroll=\"body\"\r\n          fullWidth\r\n        >\r\n          <form method=\"post\">\r\n            <DialogTitle className=\"mt-2\">Show Item</DialogTitle>\r\n            <DialogContent>\r\n                <Container>\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                    required\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={form.name}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    fullWidth\r\n                    />\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                    <TextField\r\n                    required\r\n                    name=\"model\"\r\n                    label=\"Model\"\r\n                    type=\"text\"\r\n                    value={form.model}\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    fullWidth\r\n                    />\r\n                    </FormControl>\r\n                    \r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                        select\r\n                        margin=\"normal\"\r\n                        label=\"Company\"\r\n                        name=\"company\"\r\n                        value={form.company}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        required\r\n                        fullWidth\r\n                        >\r\n                            <MenuItem value={' '}>\r\n                                {'--Select Company--'}\r\n                            </MenuItem>\r\n                            {companies.length >0  && companies.map(company=>(\r\n                            <MenuItem key={company.id} value={company.name}>\r\n                                {company.name}\r\n                            </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                        select\r\n                        margin=\"normal\"\r\n                        label=\"Department\"\r\n                        name=\"department\"\r\n                        value={form.department}\r\n                        InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        required\r\n                        fullWidth\r\n                        >\r\n                            <MenuItem value={' '}>\r\n                                {'--Select Company--'}\r\n                            </MenuItem>\r\n                            {departments.length >0  && departments.map(department=>(\r\n                            <MenuItem key={department.id} value={department.name}>\r\n                                {department.name}\r\n                            </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"qty\"\r\n                            label=\"Qty\"\r\n                            type=\"number\"\r\n                            value={form.qty}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"price\"\r\n                            label=\"Price\"\r\n                            type=\"number\"\r\n                            value={form.price}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"depre_price\"\r\n                            label=\"Depreciate Price\"\r\n                            type=\"number\"\r\n                            value={form.depre_price}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"purchase_order_no\"\r\n                            label=\"Purchase order no.\"\r\n                            type=\"text\"\r\n                            value={form.purchase_order_no}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                              }}\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n\r\n                </Container>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n    );\r\n\r\n    const confirmDelete = (\r\n        <Dialog\r\n        open={confirmDeleteModal}\r\n        onClose={()=>{\r\n            setConfirmDeleteModal(false)\r\n            clearForm();\r\n        }}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">Confirm Delete?</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n                Do you want to delete {form.name} ?\r\n            </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={()=>removeItem(form.id)} color=\"primary\">\r\n                Yes\r\n            </Button>\r\n            <Button onClick={()=>setConfirmDeleteModal(false)} color=\"primary\" autoFocus>\r\n                Cancel\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n\r\n    const printItemsModal = (\r\n        <Dialog\r\n          open={printModal}\r\n          onClose={()=>setPrintModal(false)}\r\n          scroll=\"body\"\r\n          fullWidth\r\n        >\r\n          <form method=\"post\">\r\n            <DialogTitle className=\"mt-2\">Print: Generate PDF</DialogTitle>\r\n            <DialogContent>\r\n                <Container>\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                        select\r\n                        margin=\"normal\"\r\n                        label=\"Department\"\r\n                        name=\"department\"\r\n                        value={form.department}\r\n                        onChange={handleChange}\r\n                        required\r\n                        fullWidth\r\n                        >\r\n                            <MenuItem value={' '}>\r\n                                {'--Select Department--'}\r\n                            </MenuItem>\r\n                            {departments.length >0  && departments.map(department=>(\r\n                            <MenuItem key={department.id} value={department.name}>\r\n                                {department.name}\r\n                            </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </FormControl>\r\n                </Container>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Container>\r\n                        <Button\r\n                        id='addBtn'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float:'right', marginRight:'15px', marginBottom: '5px'}}\r\n                        endIcon={<AddIcon />}\r\n                        disabled={form.onProcess}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        >\r\n                            Print\r\n                        </Button> \r\n                </Container>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n           <Container>\r\n           <Grid container style={{marginTop:'20px'}}>\r\n                <Grid item xs={5}>\r\n                        <TextField\r\n                        name=\"search\"  \r\n                        onChange={(e)=>searchChange(e.target.value)}\r\n                        label=\"Search...\" />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <div style={{float:'right', marginTop: '15px'}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        endIcon={<PrintIcon />}\r\n                        onClick={()=>{\r\n                            setPrintModal(true);\r\n                        }}\r\n                    >\r\n                        Print\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{marginLeft:'10px', backgroundColor:'#2ecc71'}}\r\n                        endIcon={<AddIcon />}\r\n                        onClick={()=>setCreateModal(true)}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{marginTop:'30px'}}>\r\n                <Grid item xs={12}>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Company</TableCell>\r\n                            <TableCell>Qty.</TableCell>\r\n                            <TableCell>Price</TableCell>\r\n                            <TableCell>Department</TableCell>\r\n                            <TableCell style={{textAlign:'center'}}>Actions</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {items.map(item=>(\r\n                            <TableRow key={item.id}>\r\n                                <TableCell>{item.name}</TableCell>\r\n                                <TableCell >{item.company}</TableCell>\r\n                                <TableCell>{item.qty}</TableCell>\r\n                                <TableCell >{item.price}</TableCell>\r\n                                <TableCell>{item.department}</TableCell>\r\n                                <TableCell >\r\n                                    <div style={{textAlign:'center'}}>\r\n                                    <VisibilityIcon \r\n                                    style={{color:'#2980b9' , \r\n                                    marginRight:'10px', \r\n                                    cursor:'pointer'}}\r\n                                    onClick={()=>{\r\n                                        setForm(item);\r\n                                        setShowModal(true);\r\n                                    }}\r\n                                    />\r\n                                    <EditIcon \r\n                                    style={{color:'#2ecc71' , \r\n                                    marginRight:'5px', \r\n                                    cursor:'pointer'}}\r\n                                    onClick={()=>{\r\n                                        setIsEdit(true);\r\n                                        setCreateModal(true);\r\n                                        setForm(item);\r\n                                    }} \r\n                                    />\r\n                                    <DeleteIcon  \r\n                                    style={{color:'#e74c3c' , marginLeft:'5px', cursor:'pointer'}}\r\n                                    onClick={()=>{\r\n                                        setConfirmDeleteModal(true);\r\n                                        setForm(item);\r\n                                    }}\r\n                                    />\r\n                                    </div>\r\n                                </TableCell>\r\n                             </TableRow>\r\n                        ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n           </Container>\r\n           {addDialog}\r\n           {confirmDelete}\r\n           {showDialog}\r\n           {printItemsModal}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inventory\r\n","import { Button, \r\n    Container, \r\n    Grid,\r\n    Paper, \r\n    TextField,\r\n    TableBody, \r\n    TableRow, \r\n    TableCell,\r\n    Table,\r\n    TableContainer,\r\n    TableHead,\r\n    Dialog,\r\nDialogTitle,\r\nDialogContent,\r\nDialogActions,\r\nFormControl} from '@material-ui/core';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport {fetchCompany, createCompany, updateCompany, deleteCompany} from './../../Api/company'\r\n\r\nfunction Company() {\r\n\r\n    useEffect(()=>{\r\n        const fetchApi = async () =>{\r\n            const {data} = await fetchCompany();\r\n            setCompanies(data);\r\n            console.log(data);\r\n            \r\n        }\r\n\r\n        fetchApi();\r\n    }, [])\r\n\r\n    const [companies, setCompanies] = useState([]);\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n    const [form, setForm] = useState({\r\n        id:'',\r\n        name:'',\r\n        onProcess:false\r\n    });\r\n\r\n    const [createModal, setCreateModal] = useState(false);\r\n\r\n    const addCompany = async e=> {\r\n        e.preventDefault();\r\n        setForm({...form, onProcess:true});\r\n        try{\r\n            const res = !isEdit ? await createCompany(form.name) : await updateCompany(form.id, form.name);\r\n            if(res.status === 200){\r\n            if(!isEdit){\r\n                setCompanies([...companies, res.data.data])\r\n            }else{\r\n                setCompanies(companies.map(company=>{\r\n                    if(form.id === company.id)\r\n                    company.name = form.name;\r\n                    return company\r\n                }))\r\n            }\r\n            setForm({...form, onProcess:false});\r\n            setCreateModal(false);\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n            setForm({...form, onProcess:false});\r\n            setCreateModal(false);\r\n        }\r\n        \r\n    }\r\n\r\n    const removeCompany = async id =>{\r\n        const res = await deleteCompany(id);\r\n        if(res.status === 200)\r\n        setCompanies(companies.filter(company=>company.id!==id))\r\n    }\r\n\r\n    //Dialogs\r\n    const addDialog = (\r\n        <Dialog\r\n          open={createModal}\r\n          onClose={()=>setCreateModal(false)}\r\n          scroll=\"body\"\r\n          fullWidth\r\n        >\r\n          <form onSubmit={addCompany} method=\"post\">\r\n            <DialogTitle className=\"mt-2\">{isEdit ? 'Edit' : 'Add'} Company</DialogTitle>\r\n            <DialogContent>\r\n                <Container>\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"Name\"\r\n                            onChange =  { (e)=>setForm({...form, name:e.target.value}) }\r\n                            value={form.name}\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n                </Container>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Container>\r\n                    {\r\n                        !isEdit ? (\r\n                        <Button\r\n                        id='addBtn'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float:'right', marginRight:'15px', marginBottom: '5px'}}\r\n                        endIcon={<AddIcon />}\r\n                        disabled={form.onProcess}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        >\r\n                            Add\r\n                        </Button> \r\n                        ) : (\r\n                        <Button\r\n                        id='editBtn'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float:'right', marginRight:'15px', marginBottom: '5px'}}\r\n                        endIcon={<SaveIcon />}\r\n                        disabled={form.onProcess}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button> \r\n                        )\r\n                    } \r\n                </Container>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n           <Container>\r\n           <Grid container style={{marginTop:'20px'}}>\r\n                <Grid item xs={5}>\r\n                        <TextField label=\"Search...\" />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <div style={{float:'right', marginTop: '15px'}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={()=>setCreateModal(true)}\r\n                        style={{marginLeft:'10px', backgroundColor:'#2ecc71'}}\r\n                        endIcon={<AddIcon />}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{marginTop:'30px'}}>\r\n                <Grid item xs={12}>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {companies.map(company=>(\r\n                                <TableRow key={company.id}>\r\n                                    <TableCell>{company.name}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <EditIcon \r\n                                        style={{color:'#2ecc71' , \r\n                                        marginRight:'5px', \r\n                                        cursor:'pointer'}} \r\n                                        onClick={()=>{\r\n                                            setIsEdit(true);\r\n                                            setCreateModal(true);\r\n                                            setForm(company)\r\n                                        }} />\r\n                                        <DeleteIcon onClick={()=>{\r\n                                            removeCompany(company.id)\r\n                                        }} style={{color:'#e74c3c' , marginLeft:'5px', cursor:'pointer'}} />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n           </Container>\r\n           {addDialog}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Company\r\n","import { Button, \r\n    Container, \r\n    Grid,\r\n    Paper, \r\n    TextField,\r\n    TableBody, \r\n    TableRow, \r\n    TableCell,\r\n    Table,\r\n    TableContainer,\r\n    TableHead,\r\n    Dialog,\r\nDialogTitle,\r\nDialogContent,\r\nDialogActions,\r\nFormControl} from '@material-ui/core';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport {fetchDepartment, createDepartment, updateDepartment, deleteDepartment} from './../../Api/department'\r\n\r\nfunction Department() {\r\n\r\n    useEffect(()=>{\r\n        const fetchApi = async () =>{\r\n            const {data} = await fetchDepartment();\r\n            setDepartments(data);\r\n            console.log(data);\r\n        }\r\n\r\n        fetchApi();\r\n    }, [])\r\n\r\n    const [departments, setDepartments] = useState([]);\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n    const [form, setForm] = useState({\r\n        id:'',\r\n        name:'',\r\n        onProcess:false\r\n    });\r\n\r\n    const [createModal, setCreateModal] = useState(false);\r\n \r\n    const addDepartment = async e=> {\r\n        e.preventDefault();\r\n        setForm({...form, onProcess:true});\r\n        try{\r\n            const res = !isEdit ? await createDepartment(form.name) : await updateDepartment(form.id, form.name);\r\n            if(res.status === 200){\r\n            if(!isEdit){\r\n                setDepartments([...departments, res.data.data])\r\n            }else{\r\n                setDepartments(departments.map(department=>{\r\n                    if(form.id === department.id)\r\n                    department.name = form.name;\r\n                    return department\r\n                }))\r\n            }\r\n            setForm({...form, onProcess:false});\r\n            setCreateModal(false);\r\n            }\r\n        }catch(e){\r\n            console.log(e);\r\n            setForm({...form, onProcess:false});\r\n            setCreateModal(false);\r\n        }\r\n        \r\n    }\r\n\r\n    const removeDepartment = async id =>{\r\n        const res = await deleteDepartment(id);\r\n        if(res.status === 200)\r\n        setDepartments(departments.filter(department=>department.id!==id))\r\n    }\r\n\r\n    //Dialogs\r\n    const addDialog = (\r\n        <Dialog\r\n          open={createModal}\r\n          onClose={()=>setCreateModal(false)}\r\n          scroll=\"body\"\r\n          fullWidth\r\n        >\r\n          <form onSubmit={addDepartment} method=\"post\">\r\n            <DialogTitle className=\"mt-2\">{isEdit ? 'Edit' : 'Add'} Department</DialogTitle>\r\n            <DialogContent>\r\n                <Container>\r\n                    <FormControl margin=\"normal\" fullWidth>\r\n                        <TextField\r\n                            required\r\n                            name=\"Name\"\r\n                            onChange =  { (e)=>setForm({...form, name:e.target.value}) }\r\n                            value={form.name}\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                        />\r\n                    </FormControl>\r\n                </Container>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Container>\r\n                    {\r\n                        !isEdit ? (\r\n                        <Button\r\n                        id='addBtn'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float:'right', marginRight:'15px', marginBottom: '5px'}}\r\n                        endIcon={<AddIcon />}\r\n                        disabled={form.onProcess}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        >\r\n                            Add\r\n                        </Button> \r\n                        ) : (\r\n                        <Button\r\n                        id='editBtn'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float:'right', marginRight:'15px', marginBottom: '5px'}}\r\n                        endIcon={<SaveIcon />}\r\n                        disabled={form.onProcess}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button> \r\n                        )\r\n                    } \r\n                </Container>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n           <Container>\r\n           <Grid container style={{marginTop:'20px'}}>\r\n                <Grid item xs={5}>\r\n                        <TextField label=\"Search...\" />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <div style={{float:'right', marginTop: '15px'}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={()=>setCreateModal(true)}\r\n                        style={{marginLeft:'10px', backgroundColor:'#2ecc71'}}\r\n                        endIcon={<AddIcon />}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{marginTop:'30px'}}>\r\n                <Grid item xs={12}>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"center\">Action</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {departments.map(department=>(\r\n                                <TableRow key={department.id}>\r\n                                    <TableCell>{department.name}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <EditIcon \r\n                                        style={{color:'#2ecc71' , \r\n                                        marginRight:'5px', \r\n                                        cursor:'pointer'}} \r\n                                        onClick={()=>{\r\n                                            setIsEdit(true);\r\n                                            setCreateModal(true);\r\n                                            setForm(department)\r\n                                        }} />\r\n                                        <DeleteIcon onClick={()=>{\r\n                                            removeDepartment(department.id)\r\n                                        }} style={{color:'#e74c3c' , marginLeft:'5px', cursor:'pointer'}} />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n           </Container>\r\n           {addDialog}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Department\r\n","import { Button, \r\n    Container, \r\n    Grid,\r\n    Paper, \r\n    TextField,\r\n    TableBody, \r\n    TableRow, \r\n    TableCell,\r\n    Table,\r\n    TableContainer,\r\n    TableHead,\r\n    Dialog,\r\nDialogTitle,\r\nDialogContent,\r\nDialogActions,\r\n} from '@material-ui/core';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {getUsers, registerUser} from './../../Api/users'\r\n\r\nfunction Users() {\r\n\r\n    useEffect(()=>{\r\n        const fetchApi = async () =>{\r\n            const {data} = await getUsers();\r\n            setUsers(data.users)\r\n        }\r\n\r\n        fetchApi();\r\n    }, [])\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n\r\n    const [form, setForm] = useState({\r\n        email:'',\r\n        password:'',\r\n        isProcessing:false\r\n    });\r\n\r\n    const handleChange = (e) =>{\r\n    setForm({...form, [e.target.name]:e.target.value});\r\n    }\r\n\r\n    const [createModal, setCreateModal] = useState(false);\r\n \r\n    const register = async (e) =>{\r\n        e.preventDefault();\r\n        try{\r\n            setForm({...form, isProcessing:true})\r\n            const res = await registerUser(form);\r\n            if(res.status===200){\r\n                setCreateModal(false);\r\n                const {data} = await getUsers();\r\n                setUsers(data.users)\r\n                setForm({...form, isProcessing:false})\r\n            }else{\r\n                setCreateModal(false);\r\n                setForm({...form, isProcessing:false})\r\n            }\r\n            console.log(res);\r\n        }catch(error){\r\n            console.log(error)\r\n            setForm({...form, isProcessing:false});\r\n        }\r\n    }\r\n\r\n    //Dialogs\r\n    const addDialog = (\r\n        <Dialog\r\n          open={createModal}\r\n          onClose={()=>setCreateModal(false)}\r\n          scroll=\"body\"\r\n          fullWidth\r\n        >\r\n          <form onSubmit={register} method=\"post\">\r\n            <DialogTitle className=\"mt-2\">Add user</DialogTitle>\r\n            <DialogContent>\r\n                <Container>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    value={form.email}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={form.password}\r\n                    onChange={handleChange}\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                />\r\n                </Container>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Container>\r\n                        <Button\r\n                        id='addBtn'\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{float:'right', marginRight:'15px', marginBottom: '5px'}}\r\n                        endIcon={<AddIcon />}\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        disabled={form.isProcessing}\r\n                        >\r\n                            Add User\r\n                        </Button> \r\n                </Container>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n           <Container>\r\n           <Grid container style={{marginTop:'20px'}}>\r\n                <Grid item xs={5}>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <div style={{float:'right', marginTop: '15px'}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={()=>setCreateModal(true)}\r\n                        style={{marginLeft:'10px', backgroundColor:'#2ecc71'}}\r\n                        endIcon={<AddIcon />}\r\n                    >\r\n                        Add User\r\n                    </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{marginTop:'30px'}}>\r\n                <Grid item xs={12}>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Email</TableCell>\r\n                            <TableCell align=\"center\">Created Date</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {users.map(user=>(\r\n                                <TableRow key={user.email}>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        {user.create_date}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n           </Container>\r\n           {addDialog}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://us-central1-inventory-system-944c6.cloudfunctions.net';\r\n\r\nexport const getInventoryCount = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/app/api/items/count`);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const getDepartmentCount = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/app/api/department/count`);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n\r\nexport const getUsersCount = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/app/api/users/count`);\r\n        return data;\r\n    }catch(error){\r\n        return error.response\r\n    }\r\n}\r\n","import { Container,\r\n     CssBaseline, \r\n     Divider, \r\n     Grid, \r\n     Paper, \r\n     TableCell, \r\n     TableContainer, \r\n     Typography,\r\n     Table,\r\n     TableHead,\r\n     TableRow,\r\n     TableBody } from '@material-ui/core';\r\nimport React, {useEffect, useState} from 'react';\r\nimport styles from './Dashboard.module.css';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport {getInventoryCount, getDepartmentCount, getUsersCount} from './../../Api/dashboard';\r\nimport {fetchItems} from './../../Api/inventory'\r\nimport {getUsers} from './../../Api/users'\r\n\r\nconst Dashboard = () => {\r\n\r\n    useEffect(()=>{\r\n        const getCounts = async () =>{\r\n            const ItemCount = await getInventoryCount();\r\n            const DepCount = await getDepartmentCount();\r\n            const UsersCount = await getUsersCount();\r\n            const getItems = await fetchItems();\r\n            const resUsers = await getUsers();\r\n            setCounts({\r\n                items:ItemCount.data,\r\n                departments:DepCount.data,\r\n                users:UsersCount.count\r\n            });\r\n            setItems(getItems.data.reverse()[0])\r\n            setUsers(resUsers.data.users.reverse()[0]);\r\n        }\r\n        \r\n        getCounts();\r\n    }, []);\r\n\r\n    const [counts, setCounts] = useState({\r\n        items:'---',\r\n        departments:'---',\r\n        users:'---',\r\n    });\r\n\r\n    const [items, setItems] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    \r\n    return (\r\n        <div>\r\n        <CssBaseline />\r\n            <Container>\r\n                {/* cards */}\r\n                <Grid container \r\n                spacing={1}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"stretch\"\r\n                className={styles.cardsContainer}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={3} \r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"stretch\">\r\n                            <Grid item md={4}>\r\n                                <Paper className={styles.Items}>\r\n                                    <div className={styles.ItemsSideColor}>\r\n                                    </div>\r\n                                    <div className={styles.Icons}>\r\n                                        <Grid container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"center\"\r\n                                        style={{height:'100%'}}>\r\n                                            <Grid item xs={12}>\r\n                                                <AppsIcon className={styles.iconStyle} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                    <div className={styles.Content}>\r\n                                        <Typography variant={'h5'} className={styles.ContentTitle}>\r\n                                            Items\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography variant={'h5'} className={styles.ContentValue}>\r\n                                            {counts.items}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item md={4}>\r\n                                <Paper className={styles.Items}>\r\n                                    <div className={styles.DepartmentsSideColor}>\r\n                                    </div>\r\n                                    <div className={styles.Icons}>\r\n                                        <Grid container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"center\"\r\n                                        style={{height:'100%'}}>\r\n                                            <Grid item xs={12}>\r\n                                                <AccountTreeIcon className={styles.iconStyle} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                    <div className={styles.Content}>\r\n                                        <Typography variant={'h5'} className={styles.ContentTitle}>\r\n                                            Departments\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography variant={'h5'} className={styles.ContentValue}>\r\n                                             {counts.departments}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item md={4}>\r\n                                <Paper className={styles.Items}>\r\n                                    <div className={styles.UsersSideColor}>\r\n                                    </div>\r\n                                    <div className={styles.Icons}>\r\n                                        <Grid container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"center\"\r\n                                        style={{height:'100%'}}>\r\n                                            <Grid item xs={12}>\r\n                                                <PeopleIcon className={styles.iconStyle} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                    <div className={styles.Content}>\r\n                                        <Typography variant={'h5'} className={styles.ContentTitle}>\r\n                                            Users\r\n                                        </Typography>\r\n                                        <Divider/>\r\n                                        <Typography variant={'h5'} className={styles.ContentValue}>\r\n                                        {counts.users}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* 2 tables */}\r\n                <Grid style={{marginTop:'35px'}} container spacing={3}>\r\n                    <Grid item md={6}>\r\n                    <Typography style={{opacity:0.5, marginBottom:'10px'}} variant=\"h5\">Recent Added Equipment</Typography>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell align=\"right\">Model</TableCell>\r\n                                <TableCell align=\"right\">Qty.</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>{items.name}</TableCell>\r\n                                <TableCell align=\"right\">{items.model}</TableCell>\r\n                                <TableCell align=\"right\">{items.qty}</TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                    <Grid item md={6}>\r\n                    <Typography style={{opacity:0.5, marginBottom:'10px'}} variant=\"h5\">Recent Added User</Typography>\r\n                        <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Created Date</TableCell>\r\n                               \r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>{users.email}</TableCell>\r\n                                <TableCell >{users.create_date}</TableCell>\r\n                            </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.css'\n\nimport Nav from './Components/Nav/Nav'\nimport Login from './Components/Login/Login'\nimport Inventory from './Components/Inventory/Inventory'\nimport Company from './Components/Company/Company'\nimport Department from './Components/Department/Department'\nimport Users from './Components/Users/Users'\n\nimport Dashboard from './Components/Dashboard/Dashboard'\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n                <Switch>\n                  <Route path=\"/dashboard\" exact >\n                    <Nav>\n                      <Dashboard />\n                    </Nav>\n                  </Route>\n                  <Route path=\"/inventory\" exact >\n                    <Nav>\n                      <Inventory />\n                    </Nav>\n                  </Route>\n                  <Route path=\"/company\" exact >\n                    <Nav>\n                      <Company />\n                    </Nav>\n                  </Route>\n                  <Route path=\"/department\" exact >\n                    <Nav>\n                      <Department />\n                    </Nav>\n                  </Route>\n                  <Route path=\"/users\" exact >\n                    <Nav>\n                      <Users />\n                    </Nav>\n                  </Route>\n                </Switch>\n        </Switch>\n    </Router> \n    \n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"Dashboard_cardsContainer__37M8u\",\"Items\":\"Dashboard_Items__3JQH-\",\"ItemsSideColor\":\"Dashboard_ItemsSideColor__sP8oE\",\"DepartmentsSideColor\":\"Dashboard_DepartmentsSideColor__3c7C9\",\"UsersSideColor\":\"Dashboard_UsersSideColor__jdiW2\",\"iconStyle\":\"Dashboard_iconStyle__3zJwK\",\"Content\":\"Dashboard_Content__3ab5s\",\"ContentTitle\":\"Dashboard_ContentTitle__RrXoe\",\"ContentValue\":\"Dashboard_ContentValue__19xy4\",\"Department\":\"Dashboard_Department__1Hm_Y\",\"Users\":\"Dashboard_Users__2Tjwc\"};"],"sourceRoot":""}